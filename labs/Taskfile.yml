version: '3'
includes:
  brontosaurus:
    taskfile: ./broken-brontosaurus

  forgetasaurus:
    taskfile: ./forgetasaurus
  
  jurassic-net:
    taskfile: ./jurassic-net
  
  dino-diner:
    taskfile: ./dino-diner

vars:
  NAMESPACE: museum
  repoCheck: |
        set -e
        if [ -z "$CHART" ]; then
          echo "CHART variable required"
          exit 1
        fi
        if [ ! -d "./charts/$CHART" ]; then
          echo "Chart directory does not exist"
          exit 1
        fi
  releaseCheck: |
        if [ -z "$RELEASE" ]; then
          echo "RELEASE variable required"
          exit 1
        fi

tasks:
  generate-chart:
    silent: false
    desc: |
          Define services in file `gen.toml.mockroservices`, then call
          task labs:generate-chart -- <chart name>
    cmds:
      - echo "Generating chart '{{.CHART}}' to ./charts"
      - docker run --rm --name mockroservice -v .:/workspace ravan/mockroservice:0.0.11 /app/sim -c /workspace/gen.toml.mockroservices generate -o /workspace/charts --name {{.CHART}}
    vars:
      CHART: "{{.CLI_ARGS}}"

  lint-chart:
    internal: false
    silent: true
    desc: "task labs:lint -- <chartname>"
    cmds:
      - |
        CHART="{{.CHART}}"
        RELEASE="{{.RELEASE}}"
        {{.repoCheck}}
        cd ./charts/{{.CHART}}
        helm lint . 
    vars:
      CHART: '{{.CLI_ARGS}}'

  # Internal

  uninstall-chart:
    internal: true
    silent: true
    cmds:
      - |
        CHART="{{.CHART}}"
        RELEASE="{{.RELEASE}}"
        {{.repoCheck}}
        {{.releaseCheck}}
        cd ./charts/{{.CHART}}
        helm uninstall --namespace {{.NAMESPACE}} {{.RELEASE}} {{.KUBECONFIG}}

  install-chart:
    internal: true
    silent: true
    cmds:
      - |
        CHART="{{.CHART}}"
        RELEASE="{{.RELEASE}}"
        {{.repoCheck}}
        {{.releaseCheck}}
        BASE_CMD="helm upgrade --install {{.KUBECONFIG}} --namespace {{.NAMESPACE}} --create-namespace"
        cd ./charts/{{.CHART}}
        {{if .VALUES}}
        cat <<EOF | $BASE_CMD -f - {{.RELEASE}} .
        {{.VALUES}}
        EOF
        {{else}}
        $BASE_CMD {{.RELEASE}} .
        {{end}}
    vars:
      VALUES: '{{default "" .VALUES}}'