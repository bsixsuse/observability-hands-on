version: '3'

vars:
  OBSERVABILITY_NS: monitoring # suse-observability

tasks:
  shell-env:
    desc: run 'eval $(local:task shell-env)' to setup local kubectx
    cmds:
      - echo "export KUBECONFIG={{.KUBECONFIG_FILE}}"

  start-vm:
    cmds:
      - limactl start {{.CLUSTER_NAME}}

  stop-vm:
    cmds:
      - limactl stop {{.CLUSTER_NAME}}
  
  ssh:
    cmds:
      - limactl shell {{.CLUSTER_NAME}}

  create-vm:
    cmds:
      - limactl start --name {{.CLUSTER_NAME}} --disk 25 --cpus 2 --memory 4 template://k3s --tty=false
      - echo 'To setup local kubectl context run, eval $(task local:shell-env)'

  destroy-vm:
    cmds:
      - limactl delete {{.CLUSTER_NAME}} --force --tty=false
      - limactl list

  trigger-k8s-ext-agent-job:
    cmds:
      - kubectl create job {{.KUBECONFIG}} --from=cronjob/suse-stackstate-k8s-ext "sync-$(date +%s)" -n suse-observability-extensions
      
  deploy-local-storage:
    cmds:
      - kubectl apply {{.KUBECONFIG}} -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.30/deploy/local-path-storage.yaml
      - |-
        kubectl patch storageclass local-path {{.KUBECONFIG}} -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

  deploy-otel-agent:
    cmds: 
      - |-
        cat <<EOF | helm upgrade --install --create-namespace {{.KUBECONFIG}} --namespace {{.OBSERVABILITY_NS}} -f - suse {{.HELM_REPO}}/suse-observability-otel-collector 
        apiKey: {{.STS_API_KEY}}
        otlpHost: {{.STS_OTLP}}
        clusterName: {{.CLUSTER_NAME}}
        EOF

  deploy-observability-agent:
    cmds:
      - echo "Agent will sent data to '{{.CLUSTER_NAME}}' pipeline on server '{{.STS_URL}}'"
      - helm upgrade --install {{.KUBECONFIG}} --namespace {{.OBSERVABILITY_NS}} --create-namespace --set-string 'stackstate.apiKey'="{{.STS_API_KEY}}" --set-string 'stackstate.cluster.name'="{{.CLUSTER_NAME}}" --set-string 'stackstate.url'="{{.STS_URL}}/receiver/stsAgent" --set-string 'nodgeAgent.containers.processAgent.resources.limits.cpu'="200m" --set 'clusterAgent.config.topology.collectionInterval'=45 --set 'nodeAgent.skipKubeletTLSVerify'=true suse-observability-agent suse-observability/suse-observability-agent 

  deploy-observability-agent-extensions:
      cmds:
        - helm repo add sts-ext https://ravan.github.io/helm-charts
        - helm upgrade --install --namespace suse-observability-extensions --create-namespace {{.KUBECONFIG}} --set-string 'apiKey'="{{.STS_API_KEY}}" --set-string 'clusterName'="{{.CLUSTER_NAME}}" --set-string 'serverUrl'="{{.STS_URL}}" suse sts-ext/stackstate-k8s-ext                            
   