# Triceratops Transport Service - Latency Culprit
serviceName = "Triceratops Transport"
# Stress simulation: Apply memory stress causing latency issues
[memstress]
enabled = false
delay = "10s"
memSize = "15%" # Memory usage grows
growthTime = "5s"

# Stress the CPU as well to simulate overloading
[stressng]
enabled = false
delay = "20s"
args = ["-c", "0", "-l", "50"] # 50% CPU usage

# Define transport route endpoint with added latency
[[endpoints]]
uri = "/route"
delay = "2s<>5s" # Simulate variable delay before/after processing
errorOnCall = 5 # Errors on every 5th call
body.status = "delayed"
body.msg = "Triceratops Transport is slow today!"

+++

# T-Rex Tracker
serviceName = "T-Rex Tracker"

[[endpoints]]
uri = "/track"
delay = "<100ms>"
body.status = "ok"
body.msg = "T-Rex safely tracked"

+++

# Herbivore Hideout
serviceName = "Herbivore Hideout"
[[endpoints]]
uri = "/grazing"
delay = "<200ms>"
body.status = "ok"
body.msg = "Herbivores grazing"

[[endpoints.routes]]
uri = "triceratops-transport/route"
delay = "100ms"  # Herbivore Hideout also depends on Triceratops to transport herbivores

+++

# PteroPost
serviceName = "PteroPost"

[[endpoints]]
uri = "/send"
delay = "<300ms>"
body.status = "ok"
body.msg = "Message sent to dinosaurs"

[[endpoints.routes]]
uri = "t-rex-tracker/route"
delay = "500ms"  # PteroPost needs T-Rex Tracker to check where t-rex is

[[endpoints.routes]]
uri = "herbivore-hideout/grazing"
delay = "300ms"  # PteroPost sends status updates to Herbivore Hideout

+++

# Bronto Burger
serviceName = "Bronto Burger"
[[endpoints]]
uri = "/order"
delay = "<150ms>"
body.status = "ok"
body.msg = "Order received"

[[endpoints.routes]]
uri = "PteroPost/send"
delay = "200ms"  # Bronto Burger sends order details to PteroPost for communication with other services

