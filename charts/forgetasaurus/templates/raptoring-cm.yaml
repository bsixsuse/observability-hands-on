apiVersion: v1
kind: ConfigMap
metadata:
  name: raptoring-config
  labels:
    {{- include "common.labels" . | nindent 4 }}
    {{ if eq .Values.hungry "yes" }}
    app.kubernetes.io/version: "0.3.6"
    {{ else }}
    app.kubernetes.io/version: "0.3.5"
    {{ end }}
data:
  config.toml: |
    port = 8080
    address = "0.0.0.0"

    {{ if eq .Values.hungry "yes" }}
    [memstress]
    enabled = true
    delay = "45s"
    memSize = "5 mb"
    growthTime = "45s"

    [stressng]
    enabled = false
    args = ["--cpu", "1", "--cpu-load", "1"]
    {{ end }}

    [[endpoints]]
    uri = "/fetch-data"
    delay = "<2ms>"
    errorOnCall = 0
    body.status = "ok"
    body.msg = "data fetched from TyrannoDB"

    [endpoints.logging]
    {{ if eq .Values.hungry "yes" }}
    logOnCall = 60 # the load test is 1 req/sec
    before = """
     [[ $options := list "Wait... did I just forget what I forgot? Oh no, it’s happening again!" "Who needs memory when you can have a nice, empty head like mine!" "I swear I had that stored somewhere... oh well, guess we’ll never know!" ]]
     [[ $i := randInt 0 3 ]]
     [[- index $options $i ]]
    """
    {{ else }}
    logOnCall = 60 # the load test is 1 req/sec
    before = """
     [[ $options := list "I'm a master! I never forget... uh, what was I saying?" "Running smooth as dino scales—nothing escapes my brain!" "My brain’s got more space than a T-rex dinner party." ]]
     [[ $i := randInt 0 3 ]]
     [[- index $options $i ]]
    """
    {{ end }}


    [[endpoints.routes]]
    uri = "tyrannodb/get"
    delay = "2ms"
    stopOnFail = true
